:root {
    --color-ns-yellow: #ffc917;
    --color-ns-blue: #0063d3;
    --color-ns-blue2: rgba(0, 99, 211, .5);
    --color-ns-darkblue: #003082;
    --background-color: #fff;
    --background-color2: #e6e6e9;

    --color-empty:rgb(70, 70, 70);
    --color-valid: rgb(1, 133, 9); 
    --color-invalid: rgba(255, 0, 0, 0.616);

    @supports (color: color) {
        --color-in-yellow-oklch: oklch(85.98% 0.1724 88.5);
        --color-in-blue-oklch: oklch(52.09% 0.1896 257.61);
        --color-ns-darkblue:oklch(34.16% 0.1462 260.84);
    }

    --font-size-largest: clamp(20px, 8vw, 45px);
    --font-size-legend: clamp(20px, 4vw, 30px);
    --font-size-regular: clamp(16px, 4vw, 19px);
    --font-label-size: clamp(16px, 3vw, 20px);

    accent-color: var(--color-ns-yellow);
}

@font-face {
    font-family: 'nssans';
    src: url('../fonts/nssans-regular.woff2') format('woff2');
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: 'nssans';
    src: url('../fonts/nssans-italic.woff2') format('woff2');
    font-weight: 400;
    font-style: italic;
}

@font-face {
    font-family: 'nssans';
    src: url('../fonts/nssans-demi.woff2') format('woff2');
    font-weight: 600;
    font-style: normal;
}

@font-face {
    font-family: 'nssans';
    src: url('../fonts/nssans-bold.woff2') format('woff2');
    font-weight: 700;
    font-style: normal;
}

@font-face {
    font-family: 'nssans';
    src: url('../fonts/nssans-bolditalic.woff2') format('woff2');
    font-weight: 700;
    font-style: italic;
}
 

* {
    font-family:'nssans', sans-serif;
    padding: 0;
    margin: 0;
}

body {
    background-color: var(--background-color2);

    display: grid;
    row-gap: 1.5em;
}

h1, h2, h3, p {
    display: inline-block;
}

h1 {
    place-content: center;
    color: var(--color-ns-darkblue);
}

h2 {
    font-size: var(--font-size-largest);
    font-weight: 600;
    color: var(--color-ns-darkblue);
}

h3 {
    color: var(--color-ns-darkblue);
}

legend {
    color: var(--color-ns-darkblue);
}

p {
    font-size: var(--font-size-regular);
    grid-column: 1/3;
}

div {
    width: 100%;
    border: none;
    display: none;
    grid-template-columns: subgrid;
    grid-column: span 3;
    align-self: end;
    justify-content: space-between;
    gap: 1.5em;
}

ul {
    grid-column: 1/3;
}

main button {
    background-color: var(--color-ns-blue);
    color: var(--background-color);
    padding: 1em 2em;
    border-radius: 5px;
    text-decoration: none;
    display: none;
}

main button:hover {
    background-color: var(--color-ns-darkblue);
}


main a.button {
    background-color: var(--color-ns-blue);
    color: var(--background-color);
    padding: 1em 2em;
    border-radius: 5px;
    text-decoration: none;
    text-align: center;
}

main a:hover {
    background-color: var(--color-ns-darkblue);
}

header {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    align-content: center;
    height: 8vh;
    background-color: var(--color-ns-yellow);
    padding: 0 2em;

    nav {
        position: absolute;
    }

    div {
        display: flex;
        justify-content: space-between;
        gap: 1em;
        align-items: center;
    }
    
    span {
        width: 100%;
    }
}


dialog{
    justify-self: center;
    margin: 0 2vw;
    border: none;
    place-self: center;
    min-height: 80vh;
    background-color: var(--background-color);
    padding: 4vw;
    width: 86vw;

    div {
        display: grid;
        grid-template-rows: auto 1fr auto;
        gap: .8em;
        height: 80vh;

    
        h2, p {
            align-self: start;
        }

        h2 {
            font-size: var(--font-size-largest);
        }

        p {
            font-size: var(--font-size-regular);
        }
    
        button {
            align-self: end;
            width: 100%;
        }
    }
}






main {
    display: grid;
    align-content: center;
    height: 100%;
    width: 80vw;
    justify-self: anchor-center;
}

main >button {
    display: none;
}

section {
    background-color: var(--background-color);
    min-height: 55vh;
    padding: 3vw;
    /* grid-template-rows: minmax(min-content, auto); */
}

form {
    padding-top: 1em;
    display: grid;
    gap: 2em;

    fieldset {
        width: 100%;
        border: none;
        display: grid;
        grid-template-columns: minmax(min-content, 1fr) 1fr;
        justify-content: space-between;
        gap: 1.5em;



        p {
            padding-top: 1em;
            max-width: 50ch;
            grid-column: 1/3;
        }
    }
}



/* The fieldset is styled to ensure that its contents are displayed in a grid layout with proper spacing */
fieldset {
    width: 100%;
    border: none;
    grid-column: 1/4;
    display: grid;
    grid-template-columns: minmax(min-content, 1fr) 1fr;
    align-items: center;
    justify-content:space-between;
    gap: 1.2em;

    @media (max-width: 900px) {
        grid-template-columns: 1fr;


        label {
            grid-column: 1/3;
        }

    }


}





legend {
    font-size: var(--font-size-legend);
    padding-bottom: .5em;
}



input[inputmode=numeric] {
    --w: 1ch;   /* control the width for each letter */
    --g: .15em; /* the gap between letters */
    --b: 2px;   /* the border thickness */
   
    --c: #888;
    --_n: attr(maxlength type(<integer>)); 
    font-size: 70px;
    line-height: 1.5; /* control the height */
    letter-spacing: var(--w);
    font-family: monospace;
    width: calc(var(--_n)*(1ch + var(--w)));
    padding-left: calc((var(--w) - var(--g))/2);
    clip-path: inset(0 calc(var(--w)/2) 0 0);
    background:
      repeating-linear-gradient(90deg,
        var(--c) 0 var(--b),#0000 0 calc(1ch + var(--w) - var(--g) - var(--b)),
        var(--c) 0 calc(1ch + var(--w) - var(--g)),#0000 0 calc(1ch + var(--w))),
      conic-gradient(at calc(100% - var(--g) - 1px) var(--b),#0000 75%,var(--c) 0) 
       0 0/calc(1ch + var(--w)) calc(100% - var(--b));

       border: none;
}

    /* https://css-tip.com/single-digit-inputs/ */

    input[inputmode=numeric]:user-invalid:not(:placeholder-shown) {
        --w: 1ch;   /* control the width for each letter */
        --g: .15em; /* the gap between letters */
        --b: 2px;   /* the border thickness */
       
        --c: #c40303;
        --_n: attr(maxlength type(<integer>)); 
        line-height: 1.5; /* control the height */
        letter-spacing: var(--w);
        font-family: monospace;
        width: calc(var(--_n)*(1ch + var(--w)));
        padding-left: calc((var(--w) - var(--g))/2);
        clip-path: inset(0 calc(var(--w)/2) 0 0);
        background:
          repeating-linear-gradient(90deg,
            var(--c) 0 var(--b),#0000 0 calc(1ch + var(--w) - var(--g) - var(--b)),
            var(--c) 0 calc(1ch + var(--w) - var(--g)),#0000 0 calc(1ch + var(--w))),
          conic-gradient(at calc(100% - var(--g) - 1px) var(--b),#0000 75%,var(--c) 0) 
           0 0/calc(1ch + var(--w)) calc(100% - var(--b));

           border: none;
    }

label:has(input[type=text]), label:has(input[type=email]), label:has(input[type=date]), label:has(input[type=tel]), label:has(input[type=postcode]), label:has(select)  {
    display: grid;
    grid-template-columns: 3.5fr auto;
    grid-template-rows: 1fr 1fr .5fr;
    gap: .5em;
    row-gap: .2em;
    align-items: center;
    font-size: var(--font-size-regular);
    justify-content: left;

    input, select {
        grid-row: 2;
        width: 100%;
    }




    input[type=text], input[type=email], input[type=date], input[type=postcode], input[type=tel]   {
        display: flex;
        height: 1em;
        font-size: var(--font-label-size);
        padding: .2em;
        width: 100%;
        justify-content: space-between;
        position: relative;


        &:focus {
            background-color: var(--color-ns-yellow);
            font-weight: 600;
        }

        /* Input valid & invalid styling */

        /* valids */

        &:valid:user-valid {
            border-right: 3px solid var(--color-valid);
        }


        &:valid:not(:placeholder-shown) {
        border-right: 3px solid var(--color-valid);
        width: 85%;
        }



        &:valid:required {
        border-right: 3px solid var(--color-valid);
        }

        /* Als waarde in range is (min & max) */
        
        input:user-valid:in-range {
        background-color: rgb(0 255 0 / 25%);
        border: 2px solid var(--color-valid);
        }
        
        input:user-valid:in-range+label::after {
        content: "Waarde is in range";
        grid-row: 3;
        }

        /* invalids */

        &:invalid {
            width: 85%;
        }

        &:valid:user-invalid {
            border-right: 3px solid var(--color-invalid);
        }
        
        input:out-of-range {
        background-color: rgb(255 0 0 / 25%);
        border: 2px solid var(--color-invalid);
        }
    
        input:out-of-range+label::after {
        content: "Waarde is uit range";
        grid-row: 3;
        }

        &:user-invalid {
        border-right: 3px solid var(--color-invalid);
        }

        &:invalid:focus:not(:placeholder-shown) {
        border-right: 3px solid var(--color-invalid);
        }
    }
    }

label:has(input[type=text]:valid:not(:placeholder-shown))::after {
    content: '';
    display: inline-block;
    width: .8em;
    height: .8em;
    background-image: url(../icons/general/check-fat--small.svg);
    background-size: contain;
    background-repeat: no-repeat;
    justify-self: end;
    grid-row: 2;
}


label:has(input[type=text]:required:invalid:not(:placeholder-shown))::after {
    content: '';
    display: inline-block;
    width: .8em;
    height: .8em;
    background-image: url(../icons/general/close-s--small.svg);
    background-size: contain;
    background-repeat: no-repeat;
    justify-self: end;
    grid-row: 2;
}

label:has(input[type=text]:required)::after {
    content: '*';
    grid-row: 2;
}


div.name {
    grid-column: 1/3;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: 1em;



    label {
        width: 100%;

        input{
            width: 85%;
        }
    }


}




section:nth-of-type(1) {

    grid-template-rows: auto 1fr auto;
    gap: .8em;

    h2, p {
        align-self: start;
    }

    
}



section:nth-of-type(2) {
    gap: .8em;

    h2, p {
        align-self: start;
    }

    a {
        align-self: end;
        justify-self: end;
    }

} 

small {
    grid-column: 1;
    grid-row: 3;
    color: var(--color-invalid);
}

@supports selector(:loop(input:checked)) {
    fieldset#optioneel {
    display: none;
}
}

@supports selector(:has(*)) {

    small {
        display: none;
    }
    
    label:has(input:invalid:not(:placeholder-shown):not(input[type=radio]):not(input[type=submit]):not(input[type=file])) small {
        display: block;
    }

    label:has(input:valid:not(:placeholder-shown):not(input[type=radio]):not(input[type=submit]):not(input[type=file]))::after {
        content: '';
        display: inline-block;
        width: .8em;
        height: .8em;
        background-image: url(../icons/general/check-fat--small.svg);
        background-size: contain;
        background-repeat: no-repeat;
        justify-self: end;
        grid-row: 2;
    }

    label:has(input:required:invalid:not(:placeholder-shown):not(input[type=radio]):not(input[type=submit]):not(input[type=file]))::after {
        content: '';
        display: inline-block;
        width: .8em;
        height: .8em;
        background-image: url(../icons/general/close-s--small.svg);
        background-size: contain;
        background-repeat: no-repeat;
        justify-self: end;
        grid-row: 2;
    }

    label:has(input:required:not(input[type=radio]):not(input[type=file]))::after {
        content: '*';
        grid-row: 2;
    }

    label:has(input.openUp) ~ div {
        display: none;
    }

    label:has(input.openUp:checked) ~ div  {
        display: grid;
    }

    /* label:has(input[name=text2a2]:not(:placeholder-shown)) ~ label:has(input[name=text2a2])  {
        display: none;
    } */

    /* fieldset:has(input:not(:placeholder-shown)) input:placeholder-shown {
        opacity: .2;
        pointer-events: none;
        filter: saturate();
    } */

    
    input:disabled {
        opacity: .1;
        pointer-events: none;
        filter: saturate();
    }
}
section:nth-of-type(4) {
    gap: 1em;

    h2 {
        grid-column: 1/4;
    }

    div {
        grid-row: 2;
        display: grid;
        grid-template-columns: 1fr 1fr;

        h3 {
            grid-column: 1/3;
        }

        p {
            grid-column: auto;
        }
    }

    a {
        justify-self: flex-start;
    }

    input {
        grid-column: 2;
        justify-self: flex-end;
    }

    input[type=submit]{
        grid-column: 3;
        background-color: var(--color-ns-blue);
        color: var(--background-color);
        padding: 1em 2em;
        border-radius: 5px;
        text-decoration: none;
        align-self: end;
    }
}

 [id^=sec]{
    display: grid;
}

@supports selector(:target) {
    [id^=sec] {
        display: none; 
    }

    [id^=sec]:target {
        display: grid;
        gap: 2vw;
    }

    body:not(:has([id^=sec]:target)) #sec0 {
        display: grid;
    }

    div {
        display: flex;
    }
}


/* fieldset:loop(input:checked) + fieldset {
    display: block;
} */

div.street {
    display: grid;
    grid-template-columns: 3fr 2fr 1fr;
    width: 100%;

    label:nth-of-type(1) {
        grid-column: 1/3;
    }
    label:nth-of-type(2) {
        grid-column: 3;
    }
    label:nth-of-type(3) {
        grid-column: 1/2;
    }
    label:nth-of-type(4) {
        grid-column: 2/4;
    }

}




@media (max-width: 600px) {
    div {
        display: flex;
        flex-wrap: wrap;
        grid-column: 1/4;
        
        a {
            width: 100%;
            text-align: center;

        }
    }

    div.street {
        display: flex;
        flex-wrap: wrap;
    }

}

